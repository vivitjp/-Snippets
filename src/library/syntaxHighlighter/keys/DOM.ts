import { KeyDef } from "../getKey"

export const keysDOM: KeyDef = {
  // ■ Main(赤)
  IndianRed: [
    "createElement",
    "createTextNode",
    "getElementById",
    "getElementsByClassName",
    "getElementsByTagName",
    "getElementsByTagNameNS",
    "querySelector",
    "querySelectorAll",
    "addEventListener",
    "removeEventListener",
    "dispatchEvent",
    "getAttribute",
    "getAttributeNS",
    "setAttribute",
    "removeAttribute",
    "hasAttribute",
  ],
  // ■ 青
  RoyalBlue: [
    "appendChild",
    "cloneNode",
    "contains",
    "hasChildNodes",
    "isEqualNode",
    "normalize",
    "prepend",
    "append",
    "insertBefore",
    "removeChild",
    "replaceChild",
    "replaceChildren",
    "remove",
    "before",
    "after",
    "replaceWith",
    "forEach",
    "entries",
    "keys",
    "values",
    "add",
    "remove",
    "toggle",
    "contains",
    "getComputedStyle",
    "getAttributeNames",
    "matches",
    "closest",
    "matches",
    "insertAdjacentElement",
    "insertAdjacentHTML",
    "insertAdjacentText",
    "attachShadow",
  ],
  // ■ 緑
  ForestGreen: [
    "nodeName",
    "nodeType",
    "textContent",
    "innerText",
    "parentNode",
    "parentElement",
    "offsetParent",
    "childNodes",
    "firstChild",
    "lastChild",
    "nextSibling",
    "previousSibling",
    "documentElement",
    "childElementCount",
    "children",
    "firstElementChild",
    "lastElementChild",
    "length",
    "item",
    "length",
    "id",
    "tagName",
    "innerHTML",
    "outerHTML",
    "localName",
    "className",
    "classList",
    "client",
    "scroll",
    "offset",
    "getBoundingClientRect",
    "getClientRects",
    "attributes",
    "dataset",
    "nextElementSibling",
    "previousElementSibling",
    "shadowRoot",
  ],
  // ■ オレンジ
  DarkOrange: ["beforebegin", "afterend", "afterbegin", "beforeend"],
}
