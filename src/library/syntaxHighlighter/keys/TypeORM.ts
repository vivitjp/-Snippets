import { KeyDef } from "../syntaxHighlighter"

export const keysTypeORM: KeyDef[] = [
  // ■ Main(赤)
  {
    color: "Crimson",
    keys: [
      "@Entity",
      "PrimaryColumn",
      "Column",
      "Injectable",
      "InjectRepository",
      "PrimaryGeneratedColumn",
      "TableInheritance",
      "TreeChildren",
      "TreeParent",
      "TreeLevelColumn",
      "CreateDateColumn",
      "UpdateDateColumn",
      "DeleteDateColumn",
      "VersionColumn",
      "Index",
      "Generated",
      "ViewEntity",
      "ViewColumn",
      "manager",
      "createQueryBuilder",
      "",
      "",
    ],
  },
  // ■ 青
  {
    color: "RoyalBlue",
    keys: [
      "Repository",
      "SelectQueryBuilder",
      "EntitySchema",
      "clear",
      "release",
      "query",
      "getId",
      "create",
      "merge",
      "preload",
      "save",
      "insert",
      "update",
      "upsert",
      "delete",
      "increment",
      "decrement",
      "exists",
      "existsBy",
      "find",
      "findBy",
      "findByName",
      "findOne",
      "findOneBy",
      "findOneOrFail",
      "findOneByOrFail",
      "count",
      "countBy",
      "getCount",
      "findAndCount",
      "findAndCountBy",
      "transaction",
      "getOne",
      "getOneOrFail",
      "getMany",
      "getRawOne",
      "getRawMany",
      "createAndSave",
      "hasId",
      "softDelete",
      "restore",
      "remove",
      "softRemove",
      "recover",
      "sum",
      "average",
      "minimum",
      "maximum",
      "metadata",
      "target",
      "execute",
      "loadMany",
      "Brackets",
      "NotBrackets",
      "setParameter",
      "getParameters",
      "subQuery",
      "getQuery",
      "getSql",
      "printSql",
      "stream",
      "setLock",
      "setOnLocked",
      "useIndex",
      "maxExecutionTime",
      "getQueryAndParameters",
      "addCommonTableExpression",
      "orUpdate",
      "orIgnore",
      "commitTransaction",
      "rollbackTransaction",
      "returning",
    ],
  },
  // ■ 緑
  {
    color: "ForestGreen",
    keys: [
      "",
      "select",
      "addSelect",
      "where",
      "andWhere",
      "orWhere",
      "from",
      "leftJoin",
      "relations",
      "order",
      "orderBy",
      "addOrderBy",
      "skip",
      "offset",
      "take",
      "limit",
      "withDeleted",
      "cache",
      "lock",
      "into",
      "values",
      "set",
      "of",
      "groupBy",
      "addGroupBy",
      "distinctOn",
      "leftJoinAndSelect",
      "innerJoin",
      "leftJoinAndMapOne",
      "leftJoinAndMapMany",
      "",
      "",
    ],
  },
  // ■ CadetBlue
  {
    color: "CadetBlue",
    keys: [
      "comment",
      "unique",
      "concurrent",
      "enum",
      "cascade",
      "referencedColumnName",
      "type",
      "length",
      "expression",
      "materialized",
      "createForeignKeyConstraints",
      "persistence",
      "primary",
      "default",
      "nullable",
      "onUpdate",
      "asExpression",
      "charset",
      "collation",
      "width",
      "precision",
      "scale",
      "zerofill",
      "unsigned",
      "enumName",
      "generatedType",
      "transformer",
      "queryResultCache",
      "isAdmin",
      "milliseconds",
      "id",
      "host",
      "port",
      "tableName",
      "socket",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
    ],
  },
  // ■ DarkOrange(Validator)
  {
    color: "DarkOrange",
    keys: [
      "MaxLength",
      "IsNotEmpty",
      "Matches",
      "IsNotEmpty",
      "IsInt",
      "IsNotEmpty",
      "MaxLength",
      "Transform",
      "Not",
      "IsNull",
      "Like",
      "ILike",
      "In",
      "Any",
      "ArrayContains",
      "ArrayContainedBy",
      "ArrayOverlap",
      "Equal",
      "LessThan",
      "LessThanOrEqual",
      "MoreThan",
      "MoreThanOrEqual",
      "Between",
      "Raw",
      "Or",
      "And",
    ],
  },
  // ■ グレー
  {
    color: "Tomato",
    keys: ["abstract", "readonly", "await", "async", "", ""],
  },
  // ■ 青緑
  {
    color: "CadetBlue",
    keys: [
      "DataSource",
      "dataSource",
      "getRepository",
      "queryRunner",
      "getTreeRepository",
      "getMongoRepository",
      "withRepository",
    ],
  },
  // ■ 紫
  {
    color: "DarkOrchid",
    keys: ["OneToOne", "ManyToOne", "OneToMany", "ManyToMany"],
  },
  // ■ LightSeaGreen
  {
    color: "LightSeaGreen",
    keys: [
      "JoinTable",
      "JoinColumn",
      "joinColumn",
      "inverseJoinColumn",
      "",
      "",
    ],
  },
]
