---
#-------------------------------
# AWS
#-------------------------------
- KEY: aws.ECS.category
  CATEGORY: 概要

- KEY: aws.ECS.概要
  EXPLAIN: |
    概要
  BODY: |
    ■ ECS(Elastic Container Service)
      • 複数コンテナを管理するコンテナオーケストレーション(統合管理)ツール
      • AWS上の Docker-compose というイメージ
      • スケーリング: 負荷に応じたCPUやメモリ容量の増減、コンテナの運用監視など
      • 単一コンテナなら、EC2インスタンス上でDockerを直接実行
      • 複数コンテナを管理する場合は、一括立ち上げ、終了など、ECS利用

    ■ (参考)Fargate
      • ECSで利用可能なサーバレスコンテナ実行環境
      • EC2インスタンスを利用せずにコンテナ実行
      • ECSの基盤となるインスタンスの管理をオフロード
        • インスタンスの起動、停止、スケーリングをAWSが自動で実施
        • ユーザはコンテナの定義と実行に集中
        • 管理者はインスタンス運用から解放
        • 料金: 実行したコンテナのCPUとメモリの使用量に応じて課金

    ■ ECSとEKSの違い
      • ECSはAWSオリジナルのソフトウェアで構築(中小規模)
        • AWSが開発したコンテナオーケストレーションツール
        • AWSのサービスと連携しやすい
        • AWSのサービスを利用する場合はECSを選択することが多い
        • EC2インスタンス上でDockerを実行
      • EKSはKubernetesをベースに構築(大規模)
        • KubernetesはGoogleが開発したコンテナオーケストレーションツール
        • AWSがKubernetesを利用するためのサービス

    ■ ECSとEKSの構成
      • コントロールプレーン
        • ECSの管理コンソール
        • クラスタの作成、タスク定義の作成、サービスの作成など
      • データプレーン
        • ECSの実行環境
          • Fargate: AWSが管理するサーバレスコンテナ実行環境(優先選択)
          • EC2インスタンス: でDockerを実行

- KEY: aws.ECS.ECSの構成要素
  EXPLAIN: |
    ECSの構成要素
  BODY: |
    ■ クラスタ
      • コンテナ実行環境(ただの箱)
      • サービスとタスクを分離するための論理グループ
      • 実行環境やIAM権限の境界線

    ■ タスク
      • 複数(1つ以上)コンテナをまとめて実行するための単位
      • タスク定義を元に実行される
      • EC2インスタンス上、クラスタ内で実行

    ■ タスク定義
      • タスクの実行に必要な定義
      • タスク定義を元にタスク実行
      • JSON形式で記述され、バージョン管理される
      • ECSの管理コンソールから作成
      • タスク定義の内容
        • コンテナイメージ
        • CPU、メモリ、IAMロール
        • ポートマッピング
        • 環境変数
        • コマンドやエンドポイント

    ■ サービス
      • タスク実行数定義、タスク数維持や増減、自動起動・停止の仕組み
      • ELBと連携して、負荷分散を実施
      • 起動タイプを指定(Fargate or EC2)

    ┌──────────────────────────────────────────────────────┐
    │ ECS                                                  │
    │ ┌──────────────────────┐ ┌─────────────────────────┐ │
    │ │ Cluster              │ │ Task Definition         │ │
    │ │ ┌──────────────────┐ │ │ • Resource: CPU,Memory  │ │
    │ │ │ Service          │ │ │ • IAM Role              │ │
    │ │ │     ┌──────────┐ │ │ │ • Container Image       │ │
    │ │ │     │ Tasks... │ ├──→│ • command/endpoint      │ │
    │ │ │     └──────────┘ │ │ │ • Port Mapping          │ │
    │ │ │     ┌──────────┐ │ │ │                         │ │
    │ │ │     │ Tasks... │ ├──→│                         │ │
    │ │ │     └──────────┘ │ │ │                         │ │
    │ │ └──────────────────┘ │ │                         │ │
    │ │ ┌──────────────────┐ │ │                         │ │
    │ │ │     ┌──────────┐ │ │ │                         │ │
    │ │ │     │ Tasks... │ ├──→│                         │ │
    │ │ │     └──────────┘ │ │ │                         │ │
    │ │ └──────────────────┘ │ │                         │ │
    │ └──────────────────────┘ └─────────────────────────┘ │
    └──────────────────────────────────────────────────────┘

- KEY: aws.ECS.ECSにおけるコンテナの実行方法
  EXPLAIN: |
    コンテナの実行方法と更新
  BODY: |
    ■ タスクから直接実行
      • タスク定義を元に、タスクを直接実行
      • コンテナが終了した場合、タスクも終了
      • バッチ処理など、短時間で終了するタスクに利用

    ■ サービスから実行
      • タスク定義を元に、サービスを作成
      • サービスがタスクを起動し、タスクを維持
      • タスクが終了した場合、サービスが新しいタスクを起動
      • 常時稼働するアプリケーションに利用

    ■ 更新
      • タスク定義の新しいリビジョンを作成
      • サービスにてリビジョンの指定を更新
      • サービスが新しいリビジョンのタスクを起動
      • 古いタスクを停止

- KEY: aws.ECS.category.実装
  CATEGORY: 実装

- KEY: aws.ECS.実装
  EXPLAIN: |
    実装
  BODY: |
    ■ ECSの実装
